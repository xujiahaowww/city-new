/// <reference types="node" />
/// <reference types="node" />
import { Readable } from 'stream';
import { IncomingHttpHeaders } from 'http';
export declare type HttpClientResponseMeta = {
    status: number;
    statusCode: number;
    headers: IncomingHttpHeaders;
    size: number;
    aborted: boolean;
    rt: number;
    keepAliveSocket: boolean;
    requestUrls: string[];
    /**
     * https://eggjs.org/en/core/httpclient.html#timing-boolean
     */
    timing: {
        contentDownload: number;
        waiting: number;
    };
};
export declare type ReadableWithMeta = Readable & {
    status: number;
    statusCode: number;
    headers: IncomingHttpHeaders;
};
export declare type HttpClientResponse = {
    opaque: unknown;
    data: any;
    status: number;
    statusCode: number;
    headers: IncomingHttpHeaders;
    url: string;
    redirected: boolean;
    requestUrls: string[];
    res: ReadableWithMeta | HttpClientResponseMeta;
};
